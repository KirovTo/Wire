
// Библиотека индикатора, сейчас подлючена просто как пара файлов.
// Шрифты подрезаны для экономии флеш см. файл fonts.c
// https://github.com/4ilo/ssd1306-stm32HAL
// https://eax.me/stm32-ssd1306/  			модификация библиотеки spi от другого автора.
// https://habr.com/ru/articles/313490/   	графические примитивы (круги,заливка и тд), сейчас не войдут в память МК ...

// Большой экранный буфер для дисплея - библиотеку пришлось заменить
// https://hackaday.io/project/181543-no-buffer-ssd1306-display-driver-for-stm32
#include "ssd1306.h"
#include "fonts.h"

// Буфер для строки выводимой в USART
char trans_str[32] = {0,};
int16_t ghj = 0;

// static char buff[8] = "istarik\n";
/*
static uint32_t Wave_LUT[SINF] = {
    2048, 2149, 2250, 2350, 2450, 2549, 2646, 2742, 2837, 2929, 3020, 3108, 3193, 3275, 3355,
    3431, 3504, 3574, 3639, 3701, 3759, 3812, 3861, 3906, 3946, 3982, 4013, 4039, 4060, 4076,
    4087, 4094, 4095, 4091, 4082, 4069, 4050, 4026, 3998, 3965, 3927, 3884, 3837, 3786, 3730,
    3671, 3607, 3539, 3468, 3394, 3316, 3235, 3151, 3064, 2975, 2883, 2790, 2695, 2598, 2500,
    2400, 2300, 2199, 2098, 1997, 1896, 1795, 1695, 1595, 1497, 1400, 1305, 1212, 1120, 1031,
    944, 860, 779, 701, 627, 556, 488, 424, 365, 309, 258, 211, 168, 130, 97,
    69, 45, 26, 13, 4, 0, 1, 8, 19, 35, 56, 82, 113, 149, 189,
    234, 283, 336, 394, 456, 521, 591, 664, 740, 820, 902, 987, 1075, 1166, 1258,
    1353, 1449, 1546, 1645, 1745, 1845, 1946, 2047
};*/






  Параметры таймера также  можно менять через HAL
  https://eax.me/stm32-interrupts-timers-pwm/
  __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, i);

  // Описание режимов работы АЦП и конфигурационных полей
  // https://istarik.ru/blog/stm32/113.html#cut


  // Описание кодогенератора  полей Cube IDE для таймера
  // https://istarik.ru/blog/stm32/118.html
  // Запускаем второй таймер и прерывание от него
  HAL_TIM_Base_Start_IT(&htim2);


// Библиотека без экранного буфера, только большие буквы
  	ssd1306_Init(&hi2c1);
  	HAL_Delay(500);

  	ssd1306_ClearScreen();
	ssd1306_SetCursor(26,0);
	ssd1306_WriteString("STATUS", 1);
	ssd1306_SetCursor(20,3);
	ssd1306_WriteString("MET_FINDER V0.1", 0);
	ssd1306_SetCursor(0,6);
	ssd1306_WriteString("VOLT: +12V", 0);
	ssd1306_SetCursor(0,7);
		ssd1306_WriteString("12345678 1234567 12345", 0);
	HAL_Delay(500);


  /* Init lcd using one of the stm32HAL i2c typedefs
  if (ssd1306_Init(&hi2c1) != 0) {
    Error_Handler();
  }

  ssd1306_Fill(Black);
  ssd1306_UpdateScreen(&hi2c1);
  HAL_Delay(500);


   for (uint8_t i=0; i<28; i++) {
      for (uint8_t j=0; j<64; j++) {
          ssd1306_DrawPixel(100+i, 0+j, White);
      }
  }